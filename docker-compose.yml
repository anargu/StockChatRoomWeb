services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: stockchat-postgres
    environment:
      POSTGRES_DB: ChatSystemDb
      POSTGRES_USER: stockuser
      POSTGRES_PASSWORD: chatpassword123
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - stockchat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockuser -d ChatSystemDb"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: stockchat-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - stockchat-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s  # time to start
    restart: unless-stopped

  # StooqBot Service
  stooq-bot:
    build:
      context: .
      dockerfile: StooqBot/Dockerfile
    container_name: stooq-bot
    environment:
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - stockchat-network
    restart: unless-stopped

  # StockChatRoomWeb API + Frontend
  stockchat-api:
    build:
      context: .
      dockerfile: StockChatRoomWeb.Api/Dockerfile
    container_name: stockchat-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ChatSystemDb;Username=stockuser;Password=chatpassword123
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - JWT__Secret=your-256-bit-secret-key-here-must-be-very-long-for-security-purposes
      - JWT__Issuer=StockChatRoomWeb
      - JWT__Audience=StockChatRoomWebUsers
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - stockchat-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  stockchat-network:
    driver: bridge